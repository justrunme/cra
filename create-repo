#!/bin/bash
set -e

# 🎨 Colors
GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
BLUE="\e[34m"
RESET="\e[0m"

# 📁 Paths
CONFIG_FILE="$HOME/.create-repo.conf"
REPO_LIST="$HOME/.repo-autosync.list"
LOG_FILE="$HOME/.create-repo.log"
ERROR_LOG="$HOME/.create-repo-errors.log"
PLATFORM_MAP="$HOME/.create-repo.platforms"
NOW=$(date "+%Y-%m-%d %H:%M:%S")

# 📍 Flags
repo=""
platform_flag=""
show_help=false
show_platform_status=false

while [[ $# -gt 0 ]]; do
  case $1 in
    --help|-h) show_help=true ; shift ;;
    --platform=*) platform_flag="${1#*=}" ; shift ;;
    --platform-status) show_platform_status=true ; shift ;;
    *) repo=$1 ; shift ;;
  esac
done

# 📘 Help
if $show_help; then
  echo -e "${BLUE}📦 create-repo — CLI tool for Git projects${RESET}"
  echo "Usage: create-repo [name] [--platform=github|gitlab|bitbucket]"
  echo "Other flags: --platform-status, --help"
  exit 0
fi

# 🌐 Show platform binding status
if $show_platform_status; then
  echo -e "${BLUE}📦 Folder-to-platform mapping:${RESET}"
  [ -f "$PLATFORM_MAP" ] && cat "$PLATFORM_MAP" || echo "No bindings found."
  exit 0
fi

# 📦 Folder binding logic
CURRENT_FOLDER=$(realpath "$PWD")

# Step 1: Use platform from --platform flag if set
if [[ -n "$platform_flag" ]]; then
  platform="$platform_flag"
  echo "$CURRENT_FOLDER=$platform" >> "$PLATFORM_MAP"
fi

# Step 2: Use platform from saved folder mapping
if [[ -z "$platform" && -f "$PLATFORM_MAP" ]]; then
  platform=$(grep "^$CURRENT_FOLDER=" "$PLATFORM_MAP" | cut -d= -f2)
fi

# Step 3: Auto-detect platforms if still unknown
if [[ -z "$platform" ]]; then
  available=()
  [[ -x "$(command -v gh)" ]] && gh auth status &>/dev/null && available+=("github")
  [[ -n "$GITLAB_TOKEN" ]] && available+=("gitlab")
  [[ -n "$BITBUCKET_USERNAME" && -n "$BITBUCKET_APP_PASSWORD" ]] && available+=("bitbucket")

  if [[ ${#available[@]} -eq 1 ]]; then
    platform="${available[0]}"
  elif [[ ${#available[@]} -gt 1 ]]; then
    echo -e "${YELLOW}⚠️ Detected multiple platforms: ${available[*]}${RESET}"
    echo -ne "${YELLOW}❓ Which one to use for this folder? (github/gitlab/bitbucket): ${RESET}"
    read chosen
    platform="$chosen"
    echo "$CURRENT_FOLDER=$platform" >> "$PLATFORM_MAP"
    echo -e "${GREEN}📁 Folder bound to $platform${RESET}"
    echo -e "ℹ️ You can override with --platform=... or run: create-repo --platform-status"
  fi
fi

# ❌ No platform found
if [[ -z "$platform" ]]; then
  echo -e "${RED}❌ No platform detected. Configure GH/GitLab/Bitbucket tokens.${RESET}"
  exit 1
fi

# ℹ️ Use repo name from folder if not specified
repo=${repo:-$(basename "$PWD")}
echo -e "${GREEN}📦 Initializing repo '$repo' on $platform...${RESET}"

# 🧭 Git init
git init &>/dev/null
git checkout -b main &>/dev/null || git checkout -b master &>/dev/null

# 📄 Init files
[ ! -f README.md ] && echo "# $repo" > README.md
[ ! -f .gitignore ] && echo ".DS_Store" > .gitignore

git add .
git commit -m "Initial commit at $NOW" &>/dev/null || true

# 🌐 Create remote
if [[ "$platform" == "github" ]]; then
  user=$(gh api user --jq .login)
  remote_url="git@github.com:$user/$repo.git"
  gh repo view "$repo" &>/dev/null || gh repo create "$repo" --public --source=. --push
elif [[ "$platform" == "gitlab" ]]; then
  visibility="public"
  response=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
    --data "name=$repo&visibility=$visibility" https://gitlab.com/api/v4/projects)
  remote_url=$(echo "$response" | grep -oP '"ssh_url_to_repo":"\K[^"]+')
elif [[ "$platform" == "bitbucket" ]]; then
  visibility="false"
  curl -s -u "$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD" \
    -X POST "https://api.bitbucket.org/2.0/repositories/$BITBUCKET_USERNAME/$repo" \
    -H "Content-Type: application/json" \
    -d "{\"scm\": \"git\", \"is_private\": $visibility }"
  remote_url="git@bitbucket.org:$BITBUCKET_USERNAME/$repo.git"
fi

# 🚀 Push
git remote add origin "$remote_url" 2>/dev/null || true
git push -u origin "$(git symbolic-ref --short HEAD)" &>/dev/null || true

# 📝 Track repo
grep -qxF "$PWD" "$REPO_LIST" || echo "$PWD" >> "$REPO_LIST"
echo "$NOW | $PWD | synced to $platform as $repo" >> "$LOG_FILE"

# ✅ Done
echo ""
echo -e "${GREEN}🎉 Repo '$repo' initialized and pushed to $platform!${RESET}"
echo "📁 Folder: $PWD"
echo "📝 Tracked in: $REPO_LIST"

