#!/bin/bash

CONFIG_FILE="$HOME/.create-repo.conf"
[ -f "$CONFIG_FILE" ] && source "$CONFIG_FILE"

mkdir -p ~/.create-repo/templates

# –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
if command -v gh &>/dev/null; then
  default_platform="github"
elif [ -n "$GITLAB_TOKEN" ]; then
  default_platform="gitlab"
else
  echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ gh –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é GITLAB_TOKEN"
  exit 1
fi

platform=${default_platform}
default_cron_interval=${default_cron_interval:-1}
default_visibility=${default_visibility:-public}

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
missing=""
check_dep() {
  if ! command -v "$1" &>/dev/null; then
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ: $1"
    missing+=" $1"
  else
    echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ: $1"
  fi
}
check_dep git
check_dep curl
check_dep crontab

if [[ "$platform" == "github" ]]; then
  check_dep gh
fi

if ! command -v notify-send &>/dev/null; then
  echo "‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ: notify-send (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)"
fi
if ! command -v dpkg &>/dev/null; then
  echo "‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ: dpkg (–Ω—É–∂–Ω–æ –¥–ª—è .deb-–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)"
fi

if [ -n "$missing" ]; then
  echo ""
  echo "‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã:$missing"
  echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏ –∏—Ö: sudo apt install$missing"
  exit 1
fi

# üìÅ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
repo=${1:-$(basename "$PWD")}
echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PWD"
echo "üî§ –ò–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $repo"

echo "üåê –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤—ã–±—Ä–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: $platform"

# üõ†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git
if [ ! -d .git ]; then
  git init
  git checkout -b main
else
  git checkout main 2>/dev/null || git checkout -b main
fi

# README
if [ ! -f README.md ]; then
  template="$HOME/.create-repo/templates/${platform}.README.md"
  if [ -f "$template" ]; then
    cp "$template" README.md
  else
    echo "# $repo" > README.md
  fi
fi

# .gitignore
if [ ! -f .gitignore ]; then
  if [ -f "$HOME/.create-repo/templates/${platform}.gitignore" ]; then
    cp "$HOME/.create-repo/templates/${platform}.gitignore" .gitignore
  else
    echo ".DS_Store" > .gitignore
  fi
fi

# Git add
git add .
NOW=$(date "+%Y-%m-%d %H:%M:%S")
git commit -m "Initial commit at $NOW" 2>/dev/null || echo "‚ö†Ô∏è –ö–æ–º–º–∏—Ç —É–∂–µ –±—ã–ª."

# üîó –°–æ–∑–¥–∞–Ω–∏–µ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –∏ push
if [[ "$platform" == "github" ]]; then
  remote_url="git@github.com:justrunme/$repo.git"
  if ! gh repo view "$repo" &>/dev/null; then
    echo "üåê –°–æ–∑–¥–∞—ë–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub..."
    gh repo create "$repo" --private --source=. --push
  fi
else
  remote_url=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
    --data "name=$repo&visibility=$default_visibility" \
    https://gitlab.com/api/v4/projects | grep -oP '"ssh_url_to_repo":"\K[^"]+')
fi

# üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ remote
if ! git remote get-url origin &>/dev/null; then
  git remote add origin "$remote_url"
else
  echo "‚ÑπÔ∏è Remote 'origin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ."
fi

# üåÄ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–µ—Ç–∫–∏ –∏ push
git branch --set-upstream-to=origin/main main 2>/dev/null

echo "üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º git push..."
if git push -u origin main 2>/dev/null; then
  echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å origin/main"
else
  echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å push. –ü—Ä–æ–≤–µ—Ä—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏–ª–∏ –¥–æ—Å—Ç—É–ø."
fi

# üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∞–≤—Ç–æ—Å–ª–µ–∂–µ–Ω–∏–µ
grep -qxF "$PWD" ~/.repo-autosync.list 2>/dev/null || echo "$PWD" >> ~/.repo-autosync.list
sort -u ~/.repo-autosync.list -o ~/.repo-autosync.list

# ‚è±Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∫–∞ cron-–∑–∞–¥–∞—á–∏
cron_interval=$default_cron_interval
TMP_CRON=$(mktemp)
crontab -l 2>/dev/null | grep -v 'update-all' > "$TMP_CRON"
echo "*/$cron_interval * * * * /usr/local/bin/update-all" >> "$TMP_CRON"
sort -u "$TMP_CRON" -o "$TMP_CRON"
crontab "$TMP_CRON"
rm "$TMP_CRON"
echo "‚úÖ Cron-–∑–∞–¥–∞—á–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –∫–∞–∂–¥—ã–µ $cron_interval –º–∏–Ω"

# üéâ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
echo ""
echo "üéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ!"
echo "üìÅ –ü—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞: $PWD"
echo "üåê –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: $platform"
echo "üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $repo"
echo "üìù –î–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ—Å–ª–µ–∂–µ–Ω–∏–µ: ~/.repo-autosync.list"
echo "‚è±Ô∏è Cron-–∑–∞–¥–∞—á–∞: –∫–∞–∂–¥—ã–µ $cron_interval –º–∏–Ω"
echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   üõ† –ò–∑–º–µ–Ω–∏—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—É (GitHub/GitLab):"
echo "     nano ~/.create-repo.conf  # –∏ —É–∫–∞–∂–∏ default_platform=gitlab"
echo ""
echo "   ‚è± –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª cron-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:"
echo "     nano ~/.create-repo.conf  # –∏ –∏–∑–º–µ–Ω–∏ default_cron_interval=5"
echo ""
echo "   üßπ –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∏–∑ –∞–≤—Ç–æ—Å–ª–µ–∂–µ–Ω–∏—è:"
echo "     sed -i '\\|$PWD|d' ~/.repo-autosync.list"
echo ""
echo "   üö´ –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é (cron):"
echo "     crontab -l | grep -v update-all | crontab -"
echo ""
echo "   üîÅ –í–∫–ª—é—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ:"
echo "     echo \"*/1 * * * * /usr/local/bin/update-all\" | crontab -"
echo ""
echo "üìò –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/justrunme/cra"
