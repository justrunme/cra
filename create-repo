#!/bin/bash

CONFIG_FILE="$HOME/.create-repo.conf"
[ -f "$CONFIG_FILE" ] && source "$CONFIG_FILE"

mkdir -p ~/.create-repo/templates

# üîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ñ–ª–∞–≥–æ–≤
show_version=false
show_status=false
show_log=false
log_lines=20
run_update=false
run_clean=false
dry_run=false
interactive=false
show_help=false

while [[ $# -gt 0 ]]; do
  case $1 in
    --status) show_status=true ; shift ;;
    --log) show_log=true; log_lines="${2:-20}"; shift 2;;
    --update) run_update=true ; shift ;;
    --clean) run_clean=true ; shift ;;
    --dry-run) dry_run=true ; shift ;;
    --interactive) interactive=true ; shift ;;
    -h|--help) show_help=true ; shift ;;
    --version) show_version=true ; shift ;;
    *) repo=$1; shift ;;
  esac
done

# üìÇ –í–µ—Ä—Å–∏—è
if $show_version; then
  VERSION=$(dpkg -s create-repo-auto 2>/dev/null | grep '^Version:' | awk '{print $2}')
  if [ -n "$VERSION" ]; then
    echo "create-repo version $VERSION"
  else
    echo "create-repo version unknown (not installed via .deb)"
  fi
  exit 0
fi

REPO_LIST="$HOME/.repo-autosync.list"
LOG_FILE="$HOME/.create-repo.log"
SCRIPT_PATH="/usr/local/bin/update-all"

# –í—ã–≤–æ–¥ —Å—Ç–∞—Ä—Ç–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
if ! $show_status && ! $show_log && ! $run_update && ! $run_clean && ! $dry_run && ! $interactive && ! $show_help; then
  echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ: git"
  echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ: curl"
  echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ: crontab"
  if command -v gh &>/dev/null; then echo "‚úÖ –ù–∞–π–¥–µ–Ω–æ: gh"; fi

  echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PWD"
  repo=${repo:-$(basename "$PWD")}
  echo "üî§ –ò–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è: $repo"

  if command -v gh &>/dev/null; then
    default_platform="github"
  elif [ -n "$GITLAB_TOKEN" ]; then
    default_platform="gitlab"
  else
    default_platform="‚ùå –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ (—É—Å—Ç–∞–Ω–æ–≤–∏ gh –∏–ª–∏ GITLAB_TOKEN)"
  fi

  platform=${default_platform}
  default_visibility=${default_visibility:-public}
  default_cron_interval=${default_cron_interval:-1}

  echo "üåê –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –≤—ã–±—Ä–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏: $platform"
  echo "üîí –í–∏–¥–∏–º–æ—Å—Ç—å: $default_visibility"
  echo "‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª cron: $default_cron_interval –º–∏–Ω"
  echo "----------------------------------------"

  # üîß –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
  if [ ! -d .git ]; then
    echo "üõ†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è git..."
    git init && git checkout -b main
  else
    echo "üîÅ Git —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω."
    git checkout main 2>/dev/null || git checkout -b main
  fi

  if [ ! -f README.md ]; then
    echo "üìÑ –°–æ–∑–¥–∞—ë–º README.md..."
    echo "# $repo" > README.md
  fi

  if [ ! -f .gitignore ]; then
    echo "üõ°Ô∏è –°–æ–∑–¥–∞—ë–º .gitignore..."
    echo ".DS_Store" > .gitignore
  fi

  git add .
  NOW=$(date "+%Y-%m-%d %H:%M:%S")
  git commit -m "Initial commit at $NOW" 2>/dev/null || echo "‚ö†Ô∏è –ö–æ–º–º–∏—Ç —É–∂–µ –±—ã–ª."

  if [[ "$platform" == "github" ]]; then
    remote_url="git@github.com:$(gh api user --jq .login)/$repo.git"
    if ! gh repo view "$repo" &>/dev/null; then
      echo "üì° –°–æ–∑–¥–∞—ë–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitHub..."
      gh repo create "$repo" --$default_visibility --source=. --push
    fi
  elif [[ "$platform" == "gitlab" ]]; then
    if [ -z "$GITLAB_TOKEN" ]; then
      echo "‚ùå GITLAB_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
      exit 1
    fi
    echo "üì° –°–æ–∑–¥–∞—ë–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞ GitLab..."
    response=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" --data "name=$repo&visibility=$default_visibility" https://gitlab.com/api/v4/projects)
    remote_url=$(echo "$response" | grep -oP '"ssh_url_to_repo":"\K[^"]+')
    [ -z "$remote_url" ] && echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π" && exit 1
  fi

  if ! git remote get-url origin &>/dev/null; then
    git remote add origin "$remote_url"
  else
    echo "‚ÑπÔ∏è Remote 'origin' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ."
  fi

  git branch --set-upstream-to=origin/main main 2>/dev/null

  echo "üöÄ –í—ã–ø–æ–ª–Ω—è–µ–º git push..."
  if git push -u origin main 2>/dev/null; then
    echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å origin/main"
  else
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å push. –ü—Ä–æ–≤–µ—Ä—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –∏–ª–∏ –¥–æ—Å—Ç—É–ø."
  fi

  grep -qxF "$PWD" "$REPO_LIST" 2>/dev/null || echo "$PWD" >> "$REPO_LIST"
  sort -u "$REPO_LIST" -o "$REPO_LIST"

  TMP_CRON=$(mktemp)
  crontab -l 2>/dev/null | grep -v 'update-all' > "$TMP_CRON"
  echo "*/$default_cron_interval * * * * /usr/local/bin/update-all" >> "$TMP_CRON"
  sort -u "$TMP_CRON" -o "$TMP_CRON"
  crontab "$TMP_CRON"
  rm "$TMP_CRON"

  echo "‚úÖ Cron-–∑–∞–¥–∞—á–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–∞ –∫–∞–∂–¥—ã–µ $default_cron_interval –º–∏–Ω"

  echo ""
  echo "üéâ –í—Å—ë –≥–æ—Ç–æ–≤–æ!"
  echo "üìÅ –ü—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞: $PWD"
  echo "üåê –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: $platform"
  echo "üì¶ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $repo"
  echo "üìù –î–æ–±–∞–≤–ª–µ–Ω –≤ –∞–≤—Ç–æ—Å–ª–µ–∂–µ–Ω–∏–µ: $REPO_LIST"
  echo "‚è±Ô∏è Cron-–∑–∞–¥–∞—á–∞: –∫–∞–∂–¥—ã–µ $default_cron_interval –º–∏–Ω"
fi

# üÜò --help
if $show_help; then
  echo ""
  echo "üì¶ create-repo ‚Äî –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∞–≤—Ç–æ-—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Git-–ø—Ä–æ–µ–∫—Ç–æ–≤"
  echo ""
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
  echo "  create-repo [–∏–º—è] [–æ–ø—Ü–∏–∏]"
  echo ""
  echo "–û–ø—Ü–∏–∏:"
  echo "  --status           –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å cron –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"
  echo "  --log [N]          –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫ –∏–∑ –ª–æ–≥–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20)"
  echo "  --clean            –£–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—É—Ç–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ—Å–ª–µ–∂–µ–Ω–∏—è"
  echo "  --update           –û–±–Ω–æ–≤–∏—Ç—å –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ (.deb –∏–∑ GitHub)"
  echo "  --dry-run          –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –±–µ–∑ –ø—É—à–∞ –∏ cron"
  echo "  --interactive      –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏"
  echo "  -h, --help         –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
  echo "  --version          –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é"
  echo ""
fi
