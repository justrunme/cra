#!/bin/bash
set -e

CONFIG_FILE="$HOME/.create-repo.conf"
[ -f "$CONFIG_FILE" ] && source "$CONFIG_FILE"

mkdir -p ~/.create-repo/templates

# üîß Flags
show_help=false
show_version=false
run_update=false
run_clean=false
dry_run=false

while [[ $# -gt 0 ]]; do
  case $1 in
    --help|-h) show_help=true ; shift ;;
    --version) show_version=true ; shift ;;
    --update) run_update=true ; shift ;;
    --clean) run_clean=true ; shift ;;
    --dry-run) dry_run=true ; shift ;;
    *) repo=$1; shift ;;
  esac
done

# --version
if $show_version; then
  VERSION=$(dpkg -s create-repo-auto 2>/dev/null | grep '^Version:' | awk '{print $2}')
  echo "create-repo version ${VERSION:-unknown}"
  exit 0
fi

# --help
if $show_help; then
  echo "üì¶ create-repo ‚Äî –∞–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Git-–ø—Ä–æ–µ–∫—Ç–æ–≤"
  echo ""
  echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: create-repo [–∏–º—è] [–æ–ø—Ü–∏–∏]"
  echo ""
  echo "–û–ø—Ü–∏–∏:"
  echo "  --status       –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å cron –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"
  echo "  --log [N]      –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫ –∏–∑ –ª–æ–≥–∞"
  echo "  --clean        –£–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—É—Ç–∏ –∏–∑ —Å–ø–∏—Å–∫–∞"
  echo "  --update       –û–±–Ω–æ–≤–∏—Ç—å –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ (.deb)"
  echo "  --dry-run      –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞, –±–µ–∑ –ø—É—à–∞"
  echo "  --version      –ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é"
  echo "  --help         –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
  exit 0
fi

# ‚ñ∂Ô∏è –ê–≤—Ç–æ–ª–æ–≥–∏–∫–∞
repo=${repo:-$(basename "$PWD")}
REPO_LIST="$HOME/.repo-autosync.list"
SCRIPT_PATH="/usr/local/bin/update-all"
default_visibility=${default_visibility:-public}
default_cron_interval=${default_cron_interval:-1}

# üîç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
if command -v gh &>/dev/null; then
  platform="github"
elif [ -n "$GITLAB_TOKEN" ]; then
  platform="gitlab"
elif [[ -n "$BITBUCKET_USERNAME" && -n "$BITBUCKET_APP_PASSWORD" ]]; then
  platform="bitbucket"
else
  echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π."
  echo ""
  echo "–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
  echo ""
  echo "üîπ GitHub: sudo apt install gh && gh auth login"
  echo "üîπ GitLab: export GITLAB_TOKEN=your_token"
  echo "üîπ Bitbucket:"
  echo "     export BITBUCKET_USERNAME=your_name"
  echo "     export BITBUCKET_APP_PASSWORD=your_app_password"
  exit 1
fi

echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–µ—Ä—Å–∏–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞: $platform"

# Git init
[ ! -d .git ] && git init && git checkout -b main || git checkout main 2>/dev/null || git checkout -b main
[ ! -f README.md ] && echo "# $repo" > README.md
[ ! -f .gitignore ] && echo ".DS_Store" > .gitignore

git add .
NOW=$(date "+%Y-%m-%d %H:%M:%S")
git commit -m "Initial commit at $NOW" 2>/dev/null || true

# ‚ñ∂Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
if [[ "$platform" == "github" ]]; then
  remote_url="git@github.com:$(gh api user --jq .login)/$repo.git"
  if ! gh repo view "$repo" &>/dev/null; then
    gh repo create "$repo" --$default_visibility --source=. --push
  fi
elif [[ "$platform" == "gitlab" ]]; then
  response=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_TOKEN" \
    --data "name=$repo&visibility=$default_visibility" https://gitlab.com/api/v4/projects)
  remote_url=$(echo "$response" | grep -oP '"ssh_url_to_repo":"\K[^"]+')
elif [[ "$platform" == "bitbucket" ]]; then
  curl -s -u "$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD" \
    -X POST "https://api.bitbucket.org/2.0/repositories/$BITBUCKET_USERNAME/$repo" \
    -H "Content-Type: application/json" \
    -d "{\"scm\": \"git\", \"is_private\": $( [[ "$default_visibility" == "private" ]] && echo true || echo false ) }"
  remote_url="git@bitbucket.org:$BITBUCKET_USERNAME/$repo.git"
fi

git remote get-url origin &>/dev/null || git remote add origin "$remote_url"
git push -u origin main

# –î–æ–±–∞–≤–∏—Ç—å –≤ –∞–≤—Ç–æ—Å–ª–µ–∂–µ–Ω–∏–µ
grep -qxF "$PWD" "$REPO_LIST" 2>/dev/null || echo "$PWD" >> "$REPO_LIST"

# Cron
TMP_CRON=$(mktemp)
crontab -l 2>/dev/null | grep -v "$SCRIPT_PATH" > "$TMP_CRON"
echo "*/$default_cron_interval * * * * $SCRIPT_PATH" >> "$TMP_CRON"
sort -u "$TMP_CRON" -o "$TMP_CRON"
crontab "$TMP_CRON"
rm "$TMP_CRON"

# ‚úÖ –§–∏–Ω–∞–ª
echo ""
echo "üéâ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π '$repo' —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å $platform"
echo "üìÅ –ü—É—Ç—å: $PWD"
echo "üìù –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è: $REPO_LIST"
echo "‚è±Ô∏è Cron: –∫–∞–∂–¥—ã–µ $default_cron_interval –º–∏–Ω"
echo "‚ÑπÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª: nano ~/.create-repo.conf (default_cron_interval)"
