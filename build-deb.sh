#!/bin/bash

set -e

PACKAGE_NAME="repo-tools"
BASE_VERSION="1.0"
COMMIT_COUNT=$(git rev-list --count HEAD)
VERSION="$BASE_VERSION.$COMMIT_COUNT"
ARCH="amd64"
BUILD_DIR="build"
OUT_DIR="out"
BIN_DIR="$BUILD_DIR/usr/local/bin"
DEBIAN_DIR="$BUILD_DIR/DEBIAN"

echo "üî¢ –í–µ—Ä—Å–∏—è –ø–∞–∫–µ—Ç–∞: $VERSION"

# –û—á–∏—Å—Ç–∫–∞
rm -rf "$BUILD_DIR" "$OUT_DIR"
mkdir -p "$BIN_DIR" "$DEBIAN_DIR" "$OUT_DIR"

echo "üì¶ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ .deb-–ø–∞–∫–µ—Ç–∞..."

# === CONTROL ===
cat <<EOF > "$DEBIAN_DIR/control"
Package: $PACKAGE_NAME
Version: $VERSION
Section: utils
Priority: optional
Architecture: $ARCH
Maintainer: DevOps Bash Toolkit <devops@example.com>
Description: CLI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: create-repo –∏ update-all
EOF

# === postinst (cron install) ===
cat <<'EOF' > "$DEBIAN_DIR/postinst"
#!/bin/bash
SCRIPT_PATH="/usr/local/bin/update-all"
REPO_LIST="$HOME/.repo-autosync.list"

if [ ! -f "$REPO_LIST" ]; then
  echo "üìÑ –°–æ–∑–¥–∞—é $REPO_LIST"
  touch "$REPO_LIST"
fi

if ! crontab -l 2>/dev/null | grep -q "$SCRIPT_PATH"; then
  (crontab -l 2>/dev/null; echo "*/1 * * * * $SCRIPT_PATH") | sort -u | crontab -
  echo "üïí –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ cron: $SCRIPT_PATH"
else
  echo "‚ÑπÔ∏è –ó–∞–¥–∞—á–∞ —É–∂–µ –µ—Å—Ç—å –≤ crontab."
fi
EOF
chmod 755 "$DEBIAN_DIR/postinst"

# === prerm (—É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ cron) ===
cat <<'EOF' > "$DEBIAN_DIR/prerm"
#!/bin/bash
SCRIPT_PATH="/usr/local/bin/update-all"
TMP_CRON=$(mktemp)
crontab -l 2>/dev/null | grep -v "$SCRIPT_PATH" > "$TMP_CRON"
crontab "$TMP_CRON"
rm "$TMP_CRON"
echo "üßπ –ó–∞–¥–∞—á–∞ cron —É–¥–∞–ª–µ–Ω–∞: $SCRIPT_PATH"
EOF
chmod 755 "$DEBIAN_DIR/prerm"

# === –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ ===
cp create-repo "$BIN_DIR/create-repo"
cp update-all.sh "$BIN_DIR/update-all"
chmod +x "$BIN_DIR/"*

# === –°–±–æ—Ä–∫–∞ ===
DEB_PATH="$OUT_DIR/${PACKAGE_NAME}_${VERSION}.deb"
dpkg-deb --build "$BUILD_DIR" "$DEB_PATH"

echo "‚úÖ –ü–∞–∫–µ—Ç —Å–æ–±—Ä–∞–Ω: $DEB_PATH"
