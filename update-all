#!/bin/bash

REPO_LIST="$HOME/.repo-autosync.list"
LOG_FILE="$HOME/.create-repo.log"
ERROR_LOG="$HOME/.create-repo-errors.log"

# –ü–æ–¥–¥–µ—Ä–∂–∫–∞ .env
load_env() {
  [ -f .env ] && export $(grep -v '^#' .env | xargs)
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ç–∫–∏ (main –∏–ª–∏ master)
detect_branch() {
  git rev-parse --verify main &>/dev/null && echo "main" && return
  git rev-parse --verify master &>/dev/null && echo "master" && return
  echo "main"  # fallback
}

# üóÇÔ∏è –°–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f "$REPO_LIST" ]; then
  echo "üìÑ –°–ø–∏—Å–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—é..."
  touch "$REPO_LIST"
fi

mapfile -t REPOS < "$REPO_LIST"

for REPO in "${REPOS[@]}"; do
  echo "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞: $REPO"
  cd "$REPO" || {
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ $REPO" | tee -a "$ERROR_LOG"
    continue
  }

  load_env
  BRANCH=$(detect_branch)

  if ! git diff --quiet || ! git diff --cached --quiet || [ -n "$(git ls-files --others --exclude-standard)" ]; then
    NOW=$(date "+%Y-%m-%d %H:%M:%S")
    {
      git add .
      git commit -m "üîÅ Auto commit at $NOW" || echo "‚ö†Ô∏è –ù–µ—á–µ–≥–æ –∫–æ–º–º–∏—Ç–∏—Ç—å"
      git pull --rebase origin "$BRANCH"
      git push origin "$BRANCH"
      echo "$NOW | ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: $REPO" >> "$LOG_FILE"
      if command -v notify-send &>/dev/null; then
        notify-send "üü¢ Git Updated" "Push –≤—ã–ø–æ–ª–Ω–µ–Ω: $REPO"
      fi
    } || {
      echo "$NOW | ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $REPO" >> "$ERROR_LOG"
    }
  else
    NOW=$(date "+%Y-%m-%d %H:%M:%S")
    echo "$NOW | ‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π: $REPO" >> "$LOG_FILE"
  fi

  echo "-----------------------------"
done
