#!/bin/bash

REPO_LIST="$HOME/.repo-autosync.list"
LOG_FILE="$HOME/.create-repo.log"
ERROR_LOG="$HOME/.create-repo-errors.log"
GLOBAL_CONFIG="$HOME/.create-repo.conf"

# 🎨 Colors
GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
BLUE="\e[34m"
RESET="\e[0m"

# 🔔 Desktop notification
notify() {
  msg="$1"
  if command -v notify-send &>/dev/null; then
    notify-send "create-repo" "$msg"
  elif [[ "$OSTYPE" == "darwin"* ]]; then
    osascript -e "display notification \"$msg\" with title \"create-repo\""
  elif grep -qEi "(Microsoft|WSL)" /proc/version &>/dev/null; then
    powershell.exe -Command "New-BurntToastNotification -Text 'create-repo', '$msg'" >/dev/null 2>&1 || true
  fi
}

# 📦 Load .env if exists
load_env() {
  [ -f .env ] && export $(grep -v '^#' .env | xargs)
}

# 🌿 Detect branch
detect_branch() {
  local override_branch
  [ -f .create-repo.local.conf ] && override_branch=$(grep ^default_branch= .create-repo.local.conf | cut -d= -f2)
  [ -z "$override_branch" ] && [ -f "$GLOBAL_CONFIG" ] && override_branch=$(grep ^default_branch= "$GLOBAL_CONFIG" | cut -d= -f2)

  if [ -n "$override_branch" ]; then
    echo "$override_branch"
  else
    git rev-parse --verify main &>/dev/null && echo "main" && return
    git rev-parse --verify master &>/dev/null && echo "master" && return
    echo "main"
  fi
}

# 📄 Ensure list exists
[ ! -f "$REPO_LIST" ] && touch "$REPO_LIST"

# 🌀 Loop through repos
mapfile -t REPOS < "$REPO_LIST"

for REPO in "${REPOS[@]}"; do
  echo -e "${BLUE}📁 Checking: $REPO${RESET}"
  cd "$REPO" || {
    echo -e "${RED}❌ Cannot access $REPO${RESET}" | tee -a "$ERROR_LOG"
    continue
  }

  # 🛑 Skip if disabled
  if [[ -f .create-repo.local.conf ]]; then
    source .create-repo.local.conf
    if [[ "$disable_sync" == "true" ]]; then
      echo -e "${YELLOW}🚫 Skipped (disabled via local config)${RESET}"
      continue
    fi
  fi

  load_env
  BRANCH=$(detect_branch)
  NOW=$(date "+%Y-%m-%d %H:%M:%S")

  if ! git diff --quiet || ! git diff --cached --quiet || [ -n "$(git ls-files --others --exclude-standard)" ]; then
    {
      git add .
      git commit -m "🔁 Auto commit at $NOW" || echo -e "${YELLOW}⚠️ Nothing to commit${RESET}"
      git pull --rebase origin "$BRANCH"
      git push origin "$BRANCH"
      echo "$NOW | ✅ Synced: $REPO on branch $BRANCH" >> "$LOG_FILE"
      notify "✅ Synced: $(basename "$REPO") [$BRANCH]"
    } || {
      echo "$NOW | ❌ Sync error: $REPO" >> "$ERROR_LOG"
      echo -e "${RED}❌ Error syncing $REPO${RESET}"
    }
  else
    echo "$NOW | ✅ No changes: $REPO" >> "$LOG_FILE"
    echo -e "${GREEN}✔ No changes in $REPO${RESET}"
  fi

  echo -e "${RESET}-----------------------------"
done
