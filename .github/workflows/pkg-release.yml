name: Build macOS PKG

on:
  push:
    branches:
      - main

jobs:
  autotag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.set_tag.outputs.new_tag }}

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: 🔢 Determine latest tag and calculate next patch version
        id: set_tag
        shell: bash
        run: |
          git fetch --tags

          latest=$(git tag | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | sed 's/^v//' | sort -V | tail -n1)
          echo "Latest: $latest"

          if [[ -z "$latest" ]]; then
            major=1; minor=2; patch=0
          else
            IFS='.' read -r major minor patch <<< "$latest"
            if [[ $patch -ge 100 ]]; then
              patch=0
              minor=$((minor + 1))
            else
              patch=$((patch + 1))
            fi
          fi

          version="$major.$minor.$patch"
          new_tag="v$version"

          if git ls-remote --tags origin | grep -q "refs/tags/$new_tag"; then
            echo "Tag $new_tag already exists in remote. Skipping..."
            exit 0
          fi

          git tag -f "$new_tag"
          git push origin -f "$new_tag"
          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

  build-pkg:
    needs: autotag
    if: needs.autotag.outputs.new_tag != ''
    runs-on: macos-latest

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🧪 Check if important files changed
        id: check_changes
        run: |
          CHANGED=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
          echo "Changed files:"
          echo "$CHANGED"

          if echo "$CHANGED" | grep -E '^(create-repo|update-all|pkg-release.yml)$'; then
            echo "build_needed=true" >> "$GITHUB_OUTPUT"
          else
            echo "build_needed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: ⏩ Skip build if not needed
        if: steps.check_changes.outputs.build_needed != 'true'
        run: echo "🛑 No important files changed — skipping PKG build." && exit 0

      - name: 🏗 Build macOS .pkg
        run: |
          VERSION="${{ needs.autotag.outputs.new_tag }}"
          mkdir -p pkg-root/usr/local/bin
          cp create-repo pkg-root/usr/local/bin/create-repo
          chmod +x pkg-root/usr/local/bin/create-repo

          pkgbuild \
            --identifier com.justrunme.create-repo \
            --version ${VERSION#v} \
            --install-location / \
            --root pkg-root \
            create-repo-${VERSION#v}.pkg

      - name: 🚀 Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.autotag.outputs.new_tag }}
          files: create-repo-*.pkg
