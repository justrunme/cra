name: Auto Tag, Build and Release

on:
  push:
    branches:
      - main

jobs:
  autotag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.set_tag.outputs.new_tag }}
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

           - name: 🔢 Determine latest tag and calculate next patch version
        id: set_tag
        shell: bash
        run: |
          git fetch --tags  # <--- ВАЖНО!

          # Получаем последний существующий тег
          latest=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n1 || echo "v1.0.0")
          echo "Latest tag: $latest"

          version=${latest#v}
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"

          # Проверяем — не существует ли такой тег УЖЕ на удалёнке
          if git ls-remote --tags origin | grep -q "refs/tags/$new_tag"; then
            echo "Tag $new_tag already exists in remote. Skipping..."
            exit 0
          fi

          # Создаём и пушим новый тег
          git tag "$new_tag"
          git push origin "$new_tag"
          echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

  build-and-release:
    needs: autotag
    if: needs.autotag.outputs.new_tag != ''
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🧪 Check if important files changed
        id: check_changes
        run: |
          CHANGED=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }})
          echo "$CHANGED"
          if echo "$CHANGED" | grep -E '^(create-repo|update-all|DEBIAN/(control|postinst|prerm))$'; then
            echo "build_needed=true" >> $GITHUB_OUTPUT
          else
            echo "build_needed=false" >> $GITHUB_OUTPUT
          fi

      - name: ⏩ Skip build if not needed
        if: steps.check_changes.outputs.build_needed != 'true'
        run: echo "🛑 No important files changed — skipping build." && exit 0

      - name: 🛠 Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y dpkg-dev

      - name: 🏗 Build DEB package
        run: |
          VERSION="${{ needs.autotag.outputs.new_tag }}"
          mkdir -p pkg/usr/local/bin
          mkdir -p pkg/DEBIAN
          cp create-repo pkg/usr/local/bin/
          cp update-all pkg/usr/local/bin/
          chmod +x pkg/usr/local/bin/*
          cp DEBIAN/control pkg/DEBIAN/control
          cp DEBIAN/postinst pkg/DEBIAN/postinst
          cp DEBIAN/prerm pkg/DEBIAN/prerm
          chmod +x pkg/DEBIAN/postinst pkg/DEBIAN/prerm
          dpkg-deb --build pkg
          mv pkg.deb create-repo-auto_${VERSION}.deb

      - name: 🚀 Release to GitHub
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.autotag.outputs.new_tag }}
          files: create-repo-auto_*.deb
